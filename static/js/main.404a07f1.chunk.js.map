{"version":3,"sources":["Login.jsx","refreshToken.js","Todoapp.jsx","App.js","index.js"],"names":["clientId","Login","history","useHistory","signIn","useGoogleLogin","onSuccess","res","Username","profileObj","name","console","log","localStorage","setItem","push","refreshTiming","tokenObj","expires_in","refreshToken","a","reloadAuthResponse","newAuthRes","id_token","setTimeout","refreshTokenSetup","onFailure","isSignedIn","accessType","className","onClick","src","alt","Todoapp","useState","inputdata","setinputdata","items","setItems","togglebutton","settogglebutton","Edititem","setEdititem","username","getItem","buttonText","onLogoutSuccess","alert","clear","removeItem","type","placeholder","value","onChange","e","target","map","elem","id","allinputData","Date","getTime","toString","title","element","newEditItem","find","editItem","index","updateditems","filter","deleteItem","App","exact","path","component","ReactDOM","render","basename","base","document","getElementById"],"mappings":"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","file":"static/js/main.404a07f1.chunk.js","sourcesContent":["import React from \"react\";\r\n// import { GoogleLogin } from \"react-google-login\";\r\nimport { useGoogleLogin } from \"react-google-login\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { refreshTokenSetup } from \"./refreshToken\";\r\nimport \"./Login.css\";\r\n\r\nconst clientId =\r\n  \"486736129260-11h11i0v3g3trc3dskg5vqsff0v2qn0s.apps.googleusercontent.com\";\r\nfunction Login() {\r\n  const history = useHistory();\r\n\r\n  const onSuccess = (res) => {\r\n    const Username = res.profileObj.name;\r\n    console.log(\"Login Success,Current User:\", res.profileObj.name);\r\n    localStorage.setItem(\"user-name\", Username);\r\n    history.push(\"/todo\");\r\n    refreshTokenSetup(res);\r\n  };\r\n  const onFailure = (res) => {\r\n    console.log(\"login Failure\", res);\r\n  };\r\n  const { signIn } = useGoogleLogin({\r\n    onSuccess,\r\n    onFailure,\r\n    clientId,\r\n    isSignedIn: true,\r\n    accessType: \"offline\",\r\n  });\r\n  return (\r\n    <div className=\"login-main-div\">\r\n      <div className=\"login-container\">\r\n        <h2>Login</h2>\r\n        <span>\r\n          <button onClick={signIn} className=\"button\">\r\n            <img src=\"./googleicon.png\" alt=\"loading\" />\r\n            <span className=\"button-text\">Sign In with Google</span>\r\n          </button>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\nexport { clientId };\r\n{\r\n  /* <GoogleLogin\r\n            clientId={clientId}\r\n            buttonText=\"Login with Google\"\r\n            onSuccess={onLoginSuccess}\r\n            onFailure={onLoginFailure}\r\n            cookiePolicy={\"single_host_origin\"}\r\n            style={{ color: \"blue\" }}\r\n          /> */\r\n}\r\n","export const refreshTokenSetup = (res) => {\r\n  // Timing to renew access token\r\n  let refreshTiming = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000;\r\n\r\n  const refreshToken = async () => {\r\n    const newAuthRes = await res.reloadAuthResponse();\r\n    refreshTiming = (newAuthRes.expires_in || 3600 - 5 * 60) * 1000;\r\n    console.log(\"newAuthRes:\", newAuthRes);\r\n    // saveUserToken(newAuthRes.access_token); <---save new token\r\n    console.log(\"new auth Token\", newAuthRes.id_token);\r\n    //Setup the other timer after the first one\r\n    setTimeout(refreshToken, refreshTiming);\r\n  };\r\n  //Setup first refresh timer\r\n  setTimeout(refreshToken, refreshTiming);\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./Todoapp.css\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport { GoogleLogout } from \"react-google-login\";\r\nimport { clientId } from \"./Login\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\n// to get the data from local storage\r\n\r\n// const getLocalItems = () => {\r\n//   let list = localStorage.getItem(\"todo-list\");\r\n//   if (list) {\r\n//     return JSON.parse(list);\r\n//   } else {\r\n//     return [];\r\n//   }\r\n// };\r\n\r\nfunction Todoapp() {\r\n  const [inputdata, setinputdata] = useState(\"\");\r\n  const [items, setItems] = useState([]);\r\n  const [togglebutton, settogglebutton] = useState(true);\r\n  const [Edititem, setEdititem] = useState(null);\r\n  let username = localStorage.getItem(\"user-name\");\r\n\r\n  const addItem = () => {\r\n    if (!inputdata) {\r\n      alert(\"Please fill the input field first\");\r\n    } else if (inputdata && !togglebutton) {\r\n      setItems(\r\n        items.map((elem) => {\r\n          if (elem.id === Edititem) {\r\n            return { ...elem, name: inputdata };\r\n          }\r\n          return elem;\r\n        })\r\n      );\r\n      settogglebutton(true);\r\n      setinputdata(\"\");\r\n      setEdititem(null);\r\n    } else {\r\n      const allinputData = {\r\n        id: new Date().getTime().toString(),\r\n        name: inputdata,\r\n      };\r\n      setItems([...items, allinputData]);\r\n      setinputdata(\"\");\r\n    }\r\n  };\r\n\r\n  const deleteItem = (index) => {\r\n    const updateditems = items.filter((elem) => {\r\n      return index !== elem.id;\r\n    });\r\n    setItems(updateditems);\r\n  };\r\n\r\n  const editItem = (id) => {\r\n    let newEditItem = items.find((element) => {\r\n      return element.id === id;\r\n    });\r\n    settogglebutton(false);\r\n    setinputdata(newEditItem.name);\r\n    setEdititem(id);\r\n    // console.log(newEditItem);\r\n  };\r\n\r\n  const Removeall = () => {\r\n    setItems([]);\r\n  };\r\n\r\n  // add data to local storage\r\n  // useEffect(() => {\r\n  //   localStorage.setItem(\"todo-list\", JSON.stringify(items));\r\n  // }, [items]);\r\n\r\n  // logout functionality\r\n  const history = useHistory();\r\n  const onLogout = () => {\r\n    alert(\"You have been logout successfully\");\r\n    history.push(\"/\");\r\n    console.clear();\r\n    localStorage.removeItem(\"user-name\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"username\">Hello, {username}</h2>\r\n      <span className=\"logout-button\">\r\n        <GoogleLogout\r\n          clientId={clientId}\r\n          buttonText=\"Logout\"\r\n          onLogoutSuccess={onLogout}\r\n        ></GoogleLogout>\r\n      </span>\r\n      <div className=\"main-div\">\r\n        <div className=\"sub-div\">\r\n          <figure>\r\n            <img src=\"./todoicon.png\" alt=\"loading\" />\r\n            <figcaption>Add Your List Here üìù</figcaption>\r\n          </figure>\r\n          <div className=\"addItems\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"‚úçÔ∏è Add Items...\"\r\n              value={inputdata}\r\n              onChange={(e) => {\r\n                setinputdata(e.target.value);\r\n              }}\r\n            />\r\n            <span onClick={addItem} className=\"add-button\" title=\"Add Items\">\r\n              {togglebutton ? <AddIcon /> : <EditOutlinedIcon />}\r\n            </span>\r\n          </div>\r\n          <div className=\"showItems\">\r\n            {items.map((element) => {\r\n              return (\r\n                <div className=\"addedItem\" key={element.id}>\r\n                  <h3>{element.name}</h3>\r\n                  <div className=\"items-functionality\">\r\n                    <span\r\n                      onClick={() => editItem(element.id)}\r\n                      className=\"edit-button\"\r\n                      title=\"Edit Item\"\r\n                    >\r\n                      <EditOutlinedIcon />\r\n                    </span>\r\n                    <span\r\n                      onClick={() => deleteItem(element.id)}\r\n                      className=\"delete-button\"\r\n                      title=\"Delete Item\"\r\n                    >\r\n                      <DeleteForeverIcon />\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"button-section\">\r\n            <button className=\"btn\" onClick={Removeall}>\r\n              Remove All\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Todoapp;\r\n","import React from \"react\";\r\nimport Todoapp from \"./Todoapp\";\r\nimport Login from \"./Login\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={() => <Login name=\"Login \" />} />\r\n        <Route\r\n          exact\r\n          path=\"/todo\"\r\n          component={() => <Todoapp name=\"Todoapp \" />}\r\n        />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <HashRouter basename=\"todolist-app\" base=\"/\">\r\n    <App />\r\n  </HashRouter>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}